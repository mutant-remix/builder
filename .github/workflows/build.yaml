name: Build and release Mutant Remix

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  workflow_dispatch:

jobs:
  build-mrxbuilder:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # [ target, name, extension ]
        target: [
          [ "x86_64-pc-windows-gnu", "x86_64-windows", ".exe",],
          # [ "x86_64-apple-darwin", "x86_64-macos", "" ],
          # [ "aarch64-apple-darwin", "arm64-macos", "" ],
          [ "x86_64-unknown-linux-musl", "x86_64-linux-musl", "" ],
          [ "aarch64-unknown-linux-musl", "arm64-linux-musl", "" ],
          [ "x86_64-unknown-linux-gnu", "x86_64-linux-gnu", "" ],
          [ "aarch64-unknown-linux-gnu", "arm64-linux-gnu", "" ],
        ]

    steps:
      - uses: actions/checkout@v3

      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install cross
        uses: baptiste0928/cargo-install@v2
        with:
          crate: cross

      - name: Build for ${{ matrix.target }}
        run: cross build --release --target ${{ matrix.target[0] }}

      - name: Prepare directories
        run: |
          mkdir binaries release
          cp -r docs README.md LICENSE binaries

      - name: Copy ${{ matrix.target[0] }} binary
        run: |
          cp target/${{ matrix.target[0] }}/release/${{ matrix.target[1] }}${{ matrix.target[2] }} \
            binaries/mrxbuilder-v${{ github.run_number }}-${{ matrix.target[1] }}${{ matrix.target[2] }}

      - name: Strip debug symbols
        run: strip binaries/mrxbuilder-v${{ github.run_number }}-${{ matrix.target[1] }}${{ matrix.target[2] }}

      - name: Compress ${{ matrix.target[0] }} binary with UPX
        if: matrix.target[0] != 'x86_64-pc-windows-gnu'
        run: upx --best --lzma binaries/mrxbuilder-v${{ github.run_number }}-${{ matrix.target[1] }}${{ matrix.target[2] }}

      - name: Pack ${{ matrix.target[0] }}
        run: |
          tar -cvzf release/mrxbuilder-v${{ github.run_number }}-${{ matrix.target[1] }}.tar.gz \
            -C binaries \
            mrxbuilder-v${{ github.run_number }}-${{ matrix.target[1] }}${{ matrix.target[2] }} \
            docs README.md LICENSE

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release
          path: release/*

  publish-draft-release:
    needs: build-mrxbuilder
    runs-on: ubuntu-latest

    # Only run this job on manual trigger
    if: github.event_name == 'workflow_dispatch'

    steps:
      - name: Download pack artifact
        id: download-artifact
        uses: actions/download-artifact@v3
        with:
          name: binaries
          path: binaries

      - name: Create draft release
        uses: softprops/action-gh-release@v1
        with:
          files: binaries/*
          tag_name: v${{ github.run_number }}
          name: mrxbuilder v${{ github.run_number }}
          draft: true
