name: Build and release mrxbuilder

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  workflow_dispatch:

jobs:
  build-mrxbuilder:
    strategy:
      matrix:
        target:
          - name: x86_64-windows
            triple: x86_64-pc-windows-msvc
            extension: .exe
            runner: windows-latest

          - name: x86_64-linux-gnu
            triple: x86_64-unknown-linux-gnu
            extension: ""
            runner: ubuntu-latest

          - name: x86_64-macos
            triple: x86_64-apple-darwin
            extension: ""
            runner: macos-latest

    runs-on: ${{ matrix.target.runner }}

    steps:
      - uses: actions/checkout@v3

      - name: Install nasm
        uses: ilammy/setup-nasm@v1

      - name: Cache Cargo dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Cache build artifacts
        uses: actions/cache@v2
        with:
          path: target
          key: ${{ runner.os }}-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-target-

      - name: Install cargo-get
        uses: baptiste0928/cargo-install@v2
        with:
          crate: cargo-get

      - name: Build binary
        run: cargo build --profile ci --target ${{ matrix.target.triple }}

      - name: Get version
        id: get_version
        shell: bash
        run: echo "version=$(cargo get version)" >> "$GITHUB_OUTPUT"

      - name: Copy binary
        shell: bash
        run: |
          cp target/${{ matrix.target.triple }}/ci/mrxbuilder${{ matrix.target.extension }} \
            mrxbuilder-v${{ steps.get_version.outputs.version }}-${{ matrix.target.name }}${{ matrix.target.extension }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target.name }}
          path: mrxbuilder-v${{ steps.get_version.outputs.version }}-${{ matrix.target.name }}${{ matrix.target.extension }}

  test-mrxbuilder:
    needs: build-mrxbuilder
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Download built binaries
        uses: actions/download-artifact@v3
        with:
          path: binaries

      - name: Run the builder
        run: |
          ./binaries/x86_64-linux-gnu/mrxbuilder-v*-x86_64-linux-gnu ./sample-input/index.toml ./out debug,release,metadata
          echo
          tree out
          du -sh out

  publish-draft-release:
    needs: test-mrxbuilder
    runs-on: ubuntu-latest

    # Only run this job on manual trigger
    if: github.event_name == 'workflow_dispatch'

    steps:
      - uses: actions/checkout@v3

      - name: Download built binaries
        uses: actions/download-artifact@v3
        with:
          path: binaries

      - name: Compress binaries
        run: upx --best binaries/**/*

      - name: Install cargo-get
        uses: baptiste0928/cargo-install@v2
        with:
          crate: cargo-get

      - name: Get version
        id: get_version
        run: echo "version=$(cargo get version)" >> "$GITHUB_OUTPUT"

      - name: Create draft release
        uses: softprops/action-gh-release@v1
        with:
          files: binaries/**/*
          tag_name: v${{ steps.get_version.outputs.version }}
          name: mrxbuilder v${{ steps.get_version.outputs.version }}
          draft: true
